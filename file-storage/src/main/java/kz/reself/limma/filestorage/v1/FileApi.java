/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package kz.reself.limma.filestorage.v1;

import io.swagger.annotations.*;
import kz.reself.limma.filestorage.v1.dto.FileInfo;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.context.request.NativeWebRequest;

import java.util.Optional;
import java.util.UUID;

@Validated
@Api(value = "file", description = "the file API")
public interface FileApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /file/{id} : Get FileInfo by file id
     *
     * @param id uploaded file id (required)
     * @return OK (status code 200)
     *         or Bad request (status code 400)
     *         or Not Found (status code 404)
     *         or Forbidden (status code 403)
     */
    @ApiOperation(value = "Get FileInfo by file id", nickname = "getFileInfo", notes = "", response = FileInfo.class
            , tags = {"Storage",})
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = FileInfo.class),
        @ApiResponse(code = 400, message = "Bad request", response = Error.class),
        @ApiResponse(code = 404, message = "Not Found", response = Error.class),
        @ApiResponse(code = 403, message = "Forbidden", response = Error.class) })
    @RequestMapping(value = "/file/{id}",
        produces = { "application/json", "application/problem+json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<FileInfo> getFileInfo(@ApiParam(value = "uploaded file id",required=true) @PathVariable("id") UUID id) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"createdAt\" : \"2021-04-27T10:21:53Z\", \"size\" : 123456, \"name\" : \"filename.png\", \"id\" : \"3afe5b11-152c-46de-963b-8655dbc8602b\", \"storageUrl\" : \"http://minio.dev.cef.kz/testbacket/img/3afe5b11-152c-46de-963b-8655dbc8602b.png\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
