/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package kz.reself.limma.filestorage.v1;

import io.swagger.annotations.*;
import kz.reself.limma.filestorage.v1.dto.FileInfo;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import java.util.Optional;

@Validated
@Api(value = "upload", description = "the upload API")
public interface UploadApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /upload : File upload to storage
     * Endpoint for uploading file
     *
     * @param file (optional)
     * @return Created (status code 201)
     * or Bad request (status code 400)
     * or Internal Server Error (status code 500)
     */
    @ApiOperation(value = "File upload to storage", nickname = "uploadFile", notes = "Endpoint for uploading file", response = FileInfo.class,
            tags = {"Storage",})
    @ApiResponses(value = {
            @ApiResponse(code = 201, message = "Created", response = FileInfo.class),
            @ApiResponse(code = 400, message = "Bad request", response = Error.class),
            @ApiResponse(code = 500, message = "Internal Server Error", response = Error.class)})
    @RequestMapping(value = "/upload",
            produces = {"application/json", "application/problem+json"},
            consumes = {"multipart/form-data"},
            method = RequestMethod.POST)
    default ResponseEntity<FileInfo> uploadFile(@ApiParam(value = "") @Valid @RequestPart(value = "file") MultipartFile file) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType : MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"createdAt\" : \"2021-04-27T10:21:53Z\", \"size\" : 123456, \"name\" : \"filename.png\", \"id\" : \"3afe5b11-152c-46de-963b-8655dbc8602b\", \"storageUrl\" : \"http://minio.dev.cef.kz/testbacket/img/3afe5b11-152c-46de-963b-8655dbc8602b.png\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
